{"version":3,"sources":["../src/isIE.js"],"names":[],"mappings":";;;;;kBAewB;;;;;;;;;;;;;;;;AAAT,SAAS,IAAT,GAA+C;QAAjC,2DAAK,OAAO,SAAP,CAAiB,SAAjB,gBAA4B;;;;;;;AAM1D,QAAI,OAAO,GAAG,OAAH,CAAW,OAAX,CAAP,CANsD;AAO1D,QAAI,OAAO,CAAP,EAAU;;AAEV,eAAO,SAAS,GAAG,SAAH,CAAa,OAAO,CAAP,EAAU,GAAG,OAAH,CAAW,GAAX,EAAgB,IAAhB,CAAvB,CAAT,EAAwD,EAAxD,CAAP,CAFU;KAAd;;AAKA,QAAI,UAAU,GAAG,OAAH,CAAW,UAAX,CAAV,CAZsD;AAa1D,QAAI,UAAU,CAAV,EAAa;;AAEb,YAAI,KAAK,GAAG,OAAH,CAAW,KAAX,CAAL,CAFS;AAGb,eAAO,SAAS,GAAG,SAAH,CAAa,KAAK,CAAL,EAAQ,GAAG,OAAH,CAAW,GAAX,EAAgB,EAAhB,CAArB,CAAT,EAAoD,EAApD,CAAP,CAHa;KAAjB;;AAMA,QAAI,OAAO,GAAG,OAAH,CAAW,OAAX,CAAP,CAnBsD;AAoB1D,QAAI,OAAO,CAAP,EAAU;;AAEV,eAAO,SAAS,GAAG,SAAH,CAAa,OAAO,CAAP,EAAU,GAAG,OAAH,CAAW,GAAX,EAAgB,IAAhB,CAAvB,CAAT,EAAwD,EAAxD,CAAP,CAFU;KAAd;;;AApB0D,WA0BnD,KAAP,CA1B0D;CAA/C","file":"isIE.js","sourcesContent":["/**\n * Check if the users browser is a version of Internet Explorer\n *\n * @param [ua] The users user-agent string.\n * @returns {boolean|number} Returns the version number (10, 11, 12) when the browser is IE, otherwise `false`\n *\n * @example\n * // When using IE10\n * isIE(); // Returns: 10\n *\n * // When using FireFox\n * isIE(); // Returns: false\n *\n * TODO: It is not very good practice to return two different types of values from a function. Perhaps we can return `true` on IE and have a secondary function to get the version?\n */\nexport default function isIE(ua = window.navigator.userAgent) {\n    // test values\n    // IE 10: ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n    // IE 11: ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n    // IE 12 / Spartan: ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // IE 12 => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n"]}