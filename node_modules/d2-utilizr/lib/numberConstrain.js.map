{"version":3,"sources":["../src/numberConstrain.js"],"names":[],"mappings":";;;;;kBAQwB;;;;;;;;;AAAT,SAAS,eAAT,CAAyB,MAAzB,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C;AACtD,aAAS,WAAW,MAAX,CAAT,CADsD;;AAGtD,QAAI,CAAC,MAAM,GAAN,CAAD,EAAa;AACb,iBAAS,KAAK,GAAL,CAAS,MAAT,EAAiB,GAAjB,CAAT,CADa;KAAjB;AAGA,QAAI,CAAC,MAAM,GAAN,CAAD,EAAa;AACb,iBAAS,KAAK,GAAL,CAAS,MAAT,EAAiB,GAAjB,CAAT,CADa;KAAjB;AAGA,WAAO,MAAP,CATsD;CAA3C","file":"numberConstrain.js","sourcesContent":["/**\n * Constrains the value between the passed min and max\n *\n * @param {Number} number The value to be constrained\n * @param {Number} min The minumum number that the value should be within\n * @param {Number} max The maximum number that the value should be within\n * @returns {Number|*} The resulting number\n */\nexport default function numberConstrain(number, min, max) {\n    number = parseFloat(number);\n\n    if (!isNaN(min)) {\n        number = Math.max(number, min);\n    }\n    if (!isNaN(max)) {\n        number = Math.min(number, max);\n    }\n    return number;\n}\n"]}