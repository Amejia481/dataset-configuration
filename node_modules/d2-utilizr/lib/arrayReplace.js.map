{"version":3,"sources":["../src/arrayReplace.js"],"names":[],"mappings":";;;;;kBAawB;;;;;;;;;;;;;;AAAT,SAAS,YAAT,CAAsB,KAAtB,EAA6B,KAA7B,EAAoC,WAApC,EAAiD,MAAjD,EAAyD;AACpE,QAAI,UAAU,OAAO,MAAP,EAAe;AACzB,YAAI,QAAQ,MAAM,MAAN,EAAc;AACtB,kBAAM,MAAN,CAAa,KAAb,CAAmB,KAAnB,EAA0B,CAAC,KAAD,EAAQ,WAAR,EAAqB,MAArB,CAA4B,MAA5B,CAA1B,EADsB;SAA1B,MAEO;AACH,kBAAM,IAAN,CAAW,KAAX,CAAiB,KAAjB,EAAwB,MAAxB,EADG;SAFP;KADJ,MAMO;AACH,cAAM,MAAN,CAAa,KAAb,EAAoB,WAApB,EADG;KANP;AASA,WAAO,KAAP,CAVoE;CAAzD","file":"arrayReplace.js","sourcesContent":["/**\n * Replace values in an array with given values or remove values from an array.\n *\n * @param {Array} array The array where the values should be replaced\n * @param {number} index The index in the array where to start the replacement\n * @param {number} removeCount The number of items to remove\n * @param {*} insert The item(s) to be inserted\n * @returns {Array} The array with the replaced values\n *\n * @example\n * const sourceArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n * arrayReplace(sourceArray, 0, 5, ['a', 'b', 'c', 'd']); // Returns: ['a', 'b', 'c', 'd', 6, 7, 8, 9, 10]\n */\nexport default function arrayReplace(array, index, removeCount, insert) {\n    if (insert && insert.length) {\n        if (index < array.length) {\n            array.splice.apply(array, [index, removeCount].concat(insert));\n        } else {\n            array.push.apply(array, insert);\n        }\n    } else {\n        array.splice(index, removeCount);\n    }\n    return array;\n}\n"]}