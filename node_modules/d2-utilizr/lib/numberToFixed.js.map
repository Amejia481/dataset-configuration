{"version":3,"sources":["../src/numberToFixed.js"],"names":[],"mappings":";;;;;;;;;;;;AAOA,IAAM,gBAAgB,YAAW;AAC7B,aAAS,YAAT,CAAsB,KAAtB,EAA6B,SAA7B,EAAwC;AACpC,oBAAY,aAAa,CAAb,CADwB;;AAGpC,YAAI,MAAM,KAAK,GAAL,CAAS,EAAT,EAAa,SAAb,CAAN,CAHgC;AAIpC,eAAO,CAAC,KAAK,KAAL,CAAW,QAAQ,GAAR,CAAX,GAA0B,GAA1B,CAAD,CAAgC,OAAhC,CAAwC,SAAxC,CAAP,CAJoC;KAAxC;;AAOA,aAAS,eAAT,CAAyB,KAAzB,EAAgC,SAAhC,EAA2C;AACvC,oBAAY,aAAa,CAAb,CAD2B;;AAGvC,eAAO,MAAM,OAAN,CAAc,SAAd,CAAP,CAHuC;KAA3C;;;;AAR6B,WAgBtB,eAAP,CAhB6B;CAAX,EAAhB;;kBAmBS","file":"numberToFixed.js","sourcesContent":["/**\n * Fixes the number to a certain amount of decimals\n *\n * @param {Number} value The value to apply the function to\n * @param {Number} [precision=0] The amount of decimal digits to fix to\n * @returns {String} The \"fixed\" number with the specified amount of decimals\n */\nconst numberToFixed = function() {\n    function fixedToFixed(value, precision) {\n        precision = precision || 0;\n\n        var pow = math.pow(10, precision);\n        return (math.round(value * pow) / pow).toFixed(precision);\n    }\n\n    function standardToFixed(value, precision) {\n        precision = precision || 0;\n\n        return value.toFixed(precision);\n    }\n\n    // TODO: The \"broken\" toFixed is not easy to test? Should check if still relevant.\n    // return ((0.9).toFixed() !== '1') ? fixedToFixed : standardToFixed;\n    return standardToFixed;\n}();\n\nexport default numberToFixed;\n"]}